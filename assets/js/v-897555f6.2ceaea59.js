"use strict";(self.webpackChunkalgorithms_way23_ru=self.webpackChunkalgorithms_way23_ru||[]).push([[7916],{7937:(e,t,l)=>{l.r(t),l.d(t,{data:()=>a});const a=JSON.parse('{"key":"v-897555f6","path":"/20221022205412.html","title":"Стек","lang":"ru-RU","frontmatter":{"page_type":"abstract_data_type"},"excerpt":"","headers":[{"level":2,"title":"Ссылки","slug":"ссылки","link":"#ссылки","children":[]},{"level":2,"title":"Ссылки на эту заметку","slug":"ссылки-на-эту-заметку","link":"#ссылки-на-эту-заметку","children":[]}],"git":{"updatedTime":1669660493000},"filePathRelative":"20221022205412.md"}')},86:(e,t,l)=>{l.r(t),l.d(t,{default:()=>_});var a=l(6252);const i=(0,a._)("h1",{id:"стек",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#стек","aria-hidden":"true"},"#"),(0,a.Uk)(" Стек")],-1),d=(0,a.uE)('<p>Основные операции:</p><ul><li><code>push(a)</code> — поместить <code>a</code> на стек.</li><li><code>pop()</code> — вернуть последние элемент из стека и удалить его из стека.</li><li>Дополнительные операции</li><li><code>top()</code> — вернуть последний элемент из стека без удаления.</li><li><code>len()</code>— вернуть количество элементов в стеке.</li><li><code>isEmpty()</code> — возвращает <code>True</code> если стек пустой.</li></ul><p>Операция <code>pop</code> вернёт сначала последний добавленный через <code>push</code> элемент, затем предпоследний и так до того как стек опустеет.</p><p><img src="images/stack01.svg" alt=""></p>',4),o=(0,a._)("code",null,"pop",-1),r=(0,a._)("code",null,"push",-1),c=(0,a._)("code",null,"None",-1),u=(0,a._)("h2",{id:"ссылки",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#ссылки","aria-hidden":"true"},"#"),(0,a.Uk)(" Ссылки")],-1),h=(0,a._)("h2",{id:"ссылки-на-эту-заметку",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#ссылки-на-эту-заметку","aria-hidden":"true"},"#"),(0,a.Uk)(" Ссылки на эту заметку")],-1),n=(0,a._)("p",{style:{"text-align":"right"}},[(0,a._)("a",{href:"https://github.com/Kverde/algorithms/blob/main/source/20221022205412.md",target:"_blank"}," Эта заметка на GitHub ")],-1),s=(0,a._)("p",{style:{"text-align":"right"}},[(0,a._)("a",{href:"https://discourse.comtext.space/new-topic?title=%D0%A1%D1%82%D0%B5%D0%BA&body=&category=algorithm",target:"_blank"}," Обсудить на форуме ")],-1),p={},_=(0,l(3744).Z)(p,[["render",function(e,t){const l=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)("div",null,[i,(0,a._)("p",null,[(0,a.Uk)("Стек — "),(0,a.Wm)(l,{to:"/20221023123217.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("абстрактный тип данных")])),_:1}),(0,a.Uk)(" формализующий принцип "),(0,a.Wm)(l,{to:"/20221022204419.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("LIFO")])),_:1}),(0,a.Uk)(".")]),d,(0,a._)("p",null,[(0,a.Uk)("Когда стек пустой операции "),o,(0,a.Uk)(" и "),r,(0,a.Uk)(" могут либо возвращать какое-то особое значение (например, "),c,(0,a.Uk)(" в Python), либо генерировать исключение. Обычно, "),(0,a.Wm)(l,{to:"/20221023131820.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("лучше явно сообщать о проблеме или неодназначностях")])),_:1}),(0,a.Uk)(" и генерировать исключение.")]),u,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/BhargavaGrokaemAlgoritmy2018.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("Грокаем алгоритмы. Адитья Бхаргава. Питер. 2018")])),_:1}),(0,a.Uk)(". Глава 3. Рекурсия. Стек")])]),h,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/20221023123217.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("Абстрактный тип данных (Abstract data type)")])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(l,{to:"/20221121224530.html"},{default:(0,a.w5)((()=>[(0,a.Uk)("Отношение между структурами данных и абстрактными типами данных")])),_:1})])]),n,s])}]])}}]);