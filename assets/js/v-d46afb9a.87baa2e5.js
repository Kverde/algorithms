"use strict";(self.webpackChunkalgorithms_way23_ru=self.webpackChunkalgorithms_way23_ru||[]).push([[8360],{3382:(e,a,l)=>{l.r(a),l.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-d46afb9a","path":"/20221026234807.html","title":"Поиск в ширину (Breadth-first-search, BFS)","lang":"ru-RU","frontmatter":{"page_type":"algorithm"},"excerpt":"","headers":[{"level":2,"title":"Алгоритм","slug":"алгоритм","link":"#алгоритм","children":[]},{"level":2,"title":"Сложность","slug":"сложность","link":"#сложность","children":[]},{"level":2,"title":"Ссылки","slug":"ссылки","link":"#ссылки","children":[]},{"level":2,"title":"Ссылки на эту заметку","slug":"ссылки-на-эту-заметку","link":"#ссылки-на-эту-заметку","children":[]}],"git":{"updatedTime":1669660493000},"filePathRelative":"20221026234807.md"}')},9664:(e,a,l)=>{l.r(a),l.d(a,{default:()=>m});var t=l(6252);const i=(0,t.uE)('<h1 id="поиск-в-ширину-breadth-first-search-bfs" tabindex="-1"><a class="header-anchor" href="#поиск-в-ширину-breadth-first-search-bfs" aria-hidden="true">#</a> Поиск в ширину (Breadth-first-search, BFS)</h1><p>Поиск в ширину — алгоритм для нахождения кратчайшего пути в графе. Алгоритм позволяет ответь на следующие вопросы:</p><ul><li>Существует ли путь от узла A к узлу B?</li><li>Как выглядит кратчайший путь от узла A к узлу B?</li></ul><h2 id="алгоритм" tabindex="-1"><a class="header-anchor" href="#алгоритм" aria-hidden="true">#</a> Алгоритм</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Добавить вершину А в очередь\nПока в очереди есть вершина\n  Достать вершину из очереди\n  Перебрать все соседние вершины\n    Если искомая вершина найдена то конец\n    Добавить вершину в очередь\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Кроме того, нужно помечать и проверять уже просмотренные записи, чтобы не возникло бесконечного цикла.</p>',6),r=(0,t._)("h2",{id:"сложность",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#сложность","aria-hidden":"true"},"#"),(0,t.Uk)(" Сложность")],-1),d=(0,t._)("p",null,"Время выполнения зависит от количество вершин и количества ребер.",-1),n=(0,t._)("p",null,"Сложность О(V+E) V — количество вершин, E — количество ребер.",-1),s=(0,t._)("h2",{id:"ссылки",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#ссылки","aria-hidden":"true"},"#"),(0,t.Uk)(" Ссылки")],-1),h=(0,t._)("h2",{id:"ссылки-на-эту-заметку",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#ссылки-на-эту-заметку","aria-hidden":"true"},"#"),(0,t.Uk)(" Ссылки на эту заметку")],-1),u=(0,t._)("p",{style:{"text-align":"right"}},[(0,t._)("a",{href:"https://github.com/Kverde/algorithms/blob/main/source/20221026234807.md",target:"_blank"}," Эта заметка на GitHub ")],-1),c=(0,t._)("p",{style:{"text-align":"right"}},[(0,t._)("a",{href:"https://discourse.comtext.space/new-topic?title=%D0%9F%D0%BE%D0%B8%D1%81%D0%BA%20%D0%B2%20%D1%88%D0%B8%D1%80%D0%B8%D0%BD%D1%83%20%28Breadth-first-search%2C%20BFS%29&body=&category=algorithm",target:"_blank"}," Обсудить на форуме ")],-1),o={},m=(0,l(3744).Z)(o,[["render",function(e,a){const l=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)("div",null,[i,(0,t._)("p",null,[(0,t.Uk)("Алгоритм может быть реализован с помощью "),(0,t.Wm)(l,{to:"/20221025223739.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("очереди")])),_:1}),(0,t.Uk)(" или рекурсии.")]),r,d,n,s,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(l,{to:"/BhargavaGrokaemAlgoritmy2018.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("Грокаем алгоритмы. Адитья Бхаргава. Питер. 2018")])),_:1}),(0,t.Uk)(". Глава 6. Поиск в ширину. Поиск в ширину")])]),h,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(l,{to:"/20221026234645.html"},{default:(0,t.w5)((()=>[(0,t.Uk)("Задача о кратчайшем пути (Shortest path problem)")])),_:1})])]),u,c])}]])}}]);